# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: excuting remote ssh commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_IP }} 
          username: ${{ secrets.AWS_EC2_USER }} 
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }} 
          port: ${{ secrets.AWS_EC2_PORT }} 
          script: | 
            cd /home/ubuntu/repo/github-action-deploy-practice
            git checkout main
            git pull origin main
            /opt/gradle/gradle-8.2.1/bin/gradle build -x test
            if lsof -Pi :$8080 -sTCP:LISTEN -t >/dev/null; then
              echo "8080 포트가 사용 중입니다. 프로세스를 종료합니다."
              sudo fuser -k $8080/tcp
            else
              echo "8080 포트는 사용 중이지 않습니다."
            fi
            nohup java -jar ./build/libs/*.jar >> "../../logs/test/test_$(date +'%Y%m%d').log" 2>&1 &

