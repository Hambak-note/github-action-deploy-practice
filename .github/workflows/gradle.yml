# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#     - name: Build with Gradle
#       uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#       with:
#         arguments: build
#     - name: Upload artifact
#       uses: actions/upload-artifact@v2
#       with:
#         name: cicdsample
#         path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cicdsample
      - name: excuting remote ssh commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_IP }} 
          username: ${{ secrets.AWS_EC2_USER }} 
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }} 
          port: ${{ secrets.AWS_EC2_PORT }} 
          script: | 
            cd /home/ubuntu/repo/github-action-deploy-practice
            git pull origin main
            /opt/gradle/gradle-8.2.1/bin/gradle build #gradle build
            fuser -k 8080/tcp # 8080포트로 동작하는 서버 kill
            

      # - name: Setup SSH
      #   uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     ssh-private-key: ${{ secrets.PK }}
      # # - name: SCP transfer
      #   # run: scp *.jar ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_IP }}:~/cicd
      # - name: Execute remote commands
      #   run: |
      #     ssh ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_IP }} "fuser -k 8080/tcp"
      #     ssh ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_IP }} "nohup java -jar ~/cicd/*.jar &"
